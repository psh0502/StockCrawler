#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockCrawler.Dao
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Stock")]
	public partial class StockDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    #endregion
		
		public StockDataContext() : 
				base(global::StockCrawler.Dao.Properties.Settings.Default.StockConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CalculateStockPriceAverage")]
		public int CalculateStockPriceAverage([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pDateEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> pPeriod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] ref System.Nullable<decimal> oAvgClosePrice)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pDateEnd, pPeriod, oAvgClosePrice);
			oAvgClosePrice = ((System.Nullable<decimal>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertStockMarketNews")]
		public int InsertStockMarketNews([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pSource, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pNewsDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string pSubject, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(500)")] string pUrl)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pSource, pNewsDate, pSubject, pUrl);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteStockPriceHistoryData")]
		public int DeleteStockPriceHistoryData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pTradeDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pTradeDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DisableAllStocks")]
		public int DisableAllStocks()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCategoryMapping")]
		public ISingleResult<GetCategoryMappingResult> GetCategoryMapping()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetCategoryMappingResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockAnalysisData")]
		public ISingleResult<GetStockAnalysisDataResult> GetStockAnalysisData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo);
			return ((ISingleResult<GetStockAnalysisDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockAveragePrice")]
		public ISingleResult<GetStockAveragePriceResult> GetStockAveragePrice([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pDateBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pDateEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> pPeriod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pDateBegin, pDateEnd, pPeriod);
			return ((ISingleResult<GetStockAveragePriceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockBasicInfo")]
		public ISingleResult<GetStockBasicInfoResult> GetStockBasicInfo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo);
			return ((ISingleResult<GetStockBasicInfoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockFinancialReport")]
		public ISingleResult<GetStockFinancialReportResult> GetStockFinancialReport([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pTop, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> pYear, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> pSeason)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pTop, pStockNo, pYear, pSeason);
			return ((ISingleResult<GetStockFinancialReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockForumData")]
		public ISingleResult<GetStockForumDataResult> GetStockForumData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pTop, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> pID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pBgnDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pEndDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pTop, pID, pStockNo, pBgnDate, pEndDate);
			return ((ISingleResult<GetStockForumDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockInterestIssuedInfo")]
		public ISingleResult<GetStockInterestIssuedInfoResult> GetStockInterestIssuedInfo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pTop, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> pYear, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> pSeason)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pTop, pStockNo, pYear, pSeason);
			return ((ISingleResult<GetStockInterestIssuedInfoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockMarketNews")]
		public ISingleResult<GetStockMarketNewsResult> GetStockMarketNews([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pTop, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pSource, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pStartDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pEndDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pTop, pStockNo, pSource, pStartDate, pEndDate);
			return ((ISingleResult<GetStockMarketNewsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockPriceHistory")]
		public ISingleResult<GetStockPriceHistoryResult> GetStockPriceHistory([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pBeginDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pEndDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pBeginDate, pEndDate);
			return ((ISingleResult<GetStockPriceHistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockPriceHistoryPaging")]
		public ISingleResult<GetStockPriceHistoryPagingResult> GetStockPriceHistoryPaging([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pDateBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pDateEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pTop, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pCurrentPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pPageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> oPageCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pDateBegin, pDateEnd, pTop, pCurrentPage, pPageSize, oPageCount);
			oPageCount = ((System.Nullable<int>)(result.GetParameterValue(6)));
			return ((ISingleResult<GetStockPriceHistoryPagingResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStocks")]
		public ISingleResult<GetStocksResult> GetStocks([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string pStockNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo);
			return ((ISingleResult<GetStocksResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateStock")]
		public int InsertOrUpdateStock([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pStockName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pCategoryNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pStockName, pCategoryNo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateStockAnalysisData")]
		public int InsertOrUpdateStockAnalysisData(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pPrice, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,4)")] System.Nullable<decimal> pStockCashDivi, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pDiviRatio, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pDiviType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsPromisingEPS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsGrowingUpEPS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsAlwaysIncomeEPS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsAlwaysPayDivi, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsStableDivi, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsAlwaysRestoreDivi, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsStableOutsideIncome, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsStableTotalAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsGrowingUpRevenue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pHasDivi, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsRealMode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,4)")] System.Nullable<decimal> pPrice5, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,4)")] System.Nullable<decimal> pPrice6, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,4)")] System.Nullable<decimal> pPrice7, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,4)")] System.Nullable<decimal> pCurrPrice)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pPrice, pStockCashDivi, pDiviRatio, pDiviType, pIsPromisingEPS, pIsGrowingUpEPS, pIsAlwaysIncomeEPS, pIsAlwaysPayDivi, pIsStableDivi, pIsAlwaysRestoreDivi, pIsStableOutsideIncome, pIsStableTotalAmount, pIsGrowingUpRevenue, pHasDivi, pIsRealMode, pPrice5, pPrice6, pPrice7, pCurrPrice);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateStockAveragePrice")]
		public int InsertOrUpdateStockAveragePrice([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pStockDT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> pPeriod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pClosePrice)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pStockDT, pPeriod, pClosePrice);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateStockBasicInfo")]
		public int InsertOrUpdateStockBasicInfo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pCategory, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string pCompanyName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pCompanyID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pBuildDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pPublishDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pCapital, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> pReleaseStockCount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pChairman, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pCEO, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string pUrl, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1000)")] string pBusiness)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pCategory, pCompanyName, pCompanyID, pBuildDate, pPublishDate, pCapital, pReleaseStockCount, pChairman, pCEO, pUrl, pBusiness);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateStockFinancialReport")]
		public int InsertOrUpdateStockFinancialReport([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> pYear, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> pSeason, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pTotalAssets, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pTotalLiability, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pNetWorth, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pNAV, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pRevenue, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pBusinessInterest, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pNetProfitTaxFree, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pEPS, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pBusinessCashflow, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pInvestmentCashflow, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pFinancingCashflow)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pYear, pSeason, pTotalAssets, pTotalLiability, pNetWorth, pNAV, pRevenue, pBusinessInterest, pNetProfitTaxFree, pEPS, pBusinessCashflow, pInvestmentCashflow, pFinancingCashflow);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateStockInterestIssuedInfo")]
		public int InsertOrUpdateStockInterestIssuedInfo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> pYear, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> pSeason, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pDecisionDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pProfitCashIssued, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pProfitStockIssued, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pSsrCashIssued, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pSsrStockIssued, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pCapitalReserveCashIssued, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pCapitalReserveStockIssued)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pYear, pSeason, pDecisionDate, pProfitCashIssued, pProfitStockIssued, pSsrCashIssued, pSsrStockIssued, pCapitalReserveCashIssued, pCapitalReserveStockIssued);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateStockPriceHistory")]
		public int InsertOrUpdateStockPriceHistory([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pStockDT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(10,4)")] System.Nullable<decimal> pOpenPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(10,4)")] System.Nullable<decimal> pHighPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(10,4)")] System.Nullable<decimal> pLowPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(10,4)")] System.Nullable<decimal> pClosePrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(10,4)")] System.Nullable<decimal> pDeltaPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(10,4)")] System.Nullable<decimal> pDeltaPercent, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(10,4)")] System.Nullable<decimal> pPE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> pVolume)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pStockDT, pOpenPrice, pHighPrice, pLowPrice, pClosePrice, pDeltaPrice, pDeltaPercent, pPE, pVolume);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertStockForumRelations")]
		public int InsertStockForumRelations([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pStockNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> pID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pStockNo, pID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertStockForums")]
		public int InsertStockForums([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pSource, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pSubject, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pHash, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string pUrl, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pArticleDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> oID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pSource, pSubject, pHash, pUrl, pArticleDate, oID);
			oID = ((System.Nullable<long>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class GetCategoryMappingResult
	{
		
		private string _Category;
		
		private string _CategoryNo;
		
		private System.DateTime _CreatedAt;
		
		public GetCategoryMappingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CategoryNo
		{
			get
			{
				return this._CategoryNo;
			}
			set
			{
				if ((this._CategoryNo != value))
				{
					this._CategoryNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
	}
	
	public partial class GetStockAnalysisDataResult
	{
		
		private string _StockNo;
		
		private short _Year;
		
		private string _Price;
		
		private decimal _StockCashDivi;
		
		private string _DiviRatio;
		
		private string _DiviType;
		
		private bool _IsPromisingEPS;
		
		private bool _IsGrowingUpEPS;
		
		private bool _IsAlwaysIncomeEPS;
		
		private bool _IsAlwaysPayDivi;
		
		private bool _IsStableDivi;
		
		private bool _IsAlwaysRestoreDivi;
		
		private bool _IsStableOutsideIncome;
		
		private bool _IsStableTotalAmount;
		
		private bool _IsGrowingUpRevenue;
		
		private bool _HasDivi;
		
		private bool _IsRealMode;
		
		private decimal _Price5;
		
		private decimal _Price6;
		
		private decimal _Price7;
		
		private decimal _CurrPrice;
		
		private System.DateTime _LastModifiedAt;
		
		public GetStockAnalysisDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StockNo
		{
			get
			{
				return this._StockNo;
			}
			set
			{
				if ((this._StockNo != value))
				{
					this._StockNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockCashDivi", DbType="Decimal(18,4) NOT NULL")]
		public decimal StockCashDivi
		{
			get
			{
				return this._StockCashDivi;
			}
			set
			{
				if ((this._StockCashDivi != value))
				{
					this._StockCashDivi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiviRatio", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiviRatio
		{
			get
			{
				return this._DiviRatio;
			}
			set
			{
				if ((this._DiviRatio != value))
				{
					this._DiviRatio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiviType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiviType
		{
			get
			{
				return this._DiviType;
			}
			set
			{
				if ((this._DiviType != value))
				{
					this._DiviType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPromisingEPS", DbType="Bit NOT NULL")]
		public bool IsPromisingEPS
		{
			get
			{
				return this._IsPromisingEPS;
			}
			set
			{
				if ((this._IsPromisingEPS != value))
				{
					this._IsPromisingEPS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGrowingUpEPS", DbType="Bit NOT NULL")]
		public bool IsGrowingUpEPS
		{
			get
			{
				return this._IsGrowingUpEPS;
			}
			set
			{
				if ((this._IsGrowingUpEPS != value))
				{
					this._IsGrowingUpEPS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAlwaysIncomeEPS", DbType="Bit NOT NULL")]
		public bool IsAlwaysIncomeEPS
		{
			get
			{
				return this._IsAlwaysIncomeEPS;
			}
			set
			{
				if ((this._IsAlwaysIncomeEPS != value))
				{
					this._IsAlwaysIncomeEPS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAlwaysPayDivi", DbType="Bit NOT NULL")]
		public bool IsAlwaysPayDivi
		{
			get
			{
				return this._IsAlwaysPayDivi;
			}
			set
			{
				if ((this._IsAlwaysPayDivi != value))
				{
					this._IsAlwaysPayDivi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStableDivi", DbType="Bit NOT NULL")]
		public bool IsStableDivi
		{
			get
			{
				return this._IsStableDivi;
			}
			set
			{
				if ((this._IsStableDivi != value))
				{
					this._IsStableDivi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAlwaysRestoreDivi", DbType="Bit NOT NULL")]
		public bool IsAlwaysRestoreDivi
		{
			get
			{
				return this._IsAlwaysRestoreDivi;
			}
			set
			{
				if ((this._IsAlwaysRestoreDivi != value))
				{
					this._IsAlwaysRestoreDivi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStableOutsideIncome", DbType="Bit NOT NULL")]
		public bool IsStableOutsideIncome
		{
			get
			{
				return this._IsStableOutsideIncome;
			}
			set
			{
				if ((this._IsStableOutsideIncome != value))
				{
					this._IsStableOutsideIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStableTotalAmount", DbType="Bit NOT NULL")]
		public bool IsStableTotalAmount
		{
			get
			{
				return this._IsStableTotalAmount;
			}
			set
			{
				if ((this._IsStableTotalAmount != value))
				{
					this._IsStableTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGrowingUpRevenue", DbType="Bit NOT NULL")]
		public bool IsGrowingUpRevenue
		{
			get
			{
				return this._IsGrowingUpRevenue;
			}
			set
			{
				if ((this._IsGrowingUpRevenue != value))
				{
					this._IsGrowingUpRevenue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDivi", DbType="Bit NOT NULL")]
		public bool HasDivi
		{
			get
			{
				return this._HasDivi;
			}
			set
			{
				if ((this._HasDivi != value))
				{
					this._HasDivi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRealMode", DbType="Bit NOT NULL")]
		public bool IsRealMode
		{
			get
			{
				return this._IsRealMode;
			}
			set
			{
				if ((this._IsRealMode != value))
				{
					this._IsRealMode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price5", DbType="Decimal(18,4) NOT NULL")]
		public decimal Price5
		{
			get
			{
				return this._Price5;
			}
			set
			{
				if ((this._Price5 != value))
				{
					this._Price5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price6", DbType="Decimal(18,4) NOT NULL")]
		public decimal Price6
		{
			get
			{
				return this._Price6;
			}
			set
			{
				if ((this._Price6 != value))
				{
					this._Price6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price7", DbType="Decimal(18,4) NOT NULL")]
		public decimal Price7
		{
			get
			{
				return this._Price7;
			}
			set
			{
				if ((this._Price7 != value))
				{
					this._Price7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrPrice", DbType="Decimal(18,4) NOT NULL")]
		public decimal CurrPrice
		{
			get
			{
				return this._CurrPrice;
			}
			set
			{
				if ((this._CurrPrice != value))
				{
					this._CurrPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedAt", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedAt
		{
			get
			{
				return this._LastModifiedAt;
			}
			set
			{
				if ((this._LastModifiedAt != value))
				{
					this._LastModifiedAt = value;
				}
			}
		}
	}
	
	public partial class GetStockAveragePriceResult
	{
		
		private string _StockName;
		
		private string _StockNo;
		
		private System.DateTime _StockDT;
		
		private short _Period;
		
		private decimal _ClosePrice;
		
		private System.DateTime _CreatedAt;
		
		public GetStockAveragePriceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StockName
		{
			get
			{
				return this._StockName;
			}
			set
			{
				if ((this._StockName != value))
				{
					this._StockName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StockNo
		{
			get
			{
				return this._StockNo;
			}
			set
			{
				if ((this._StockNo != value))
				{
					this._StockNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockDT", DbType="Date NOT NULL")]
		public System.DateTime StockDT
		{
			get
			{
				return this._StockDT;
			}
			set
			{
				if ((this._StockDT != value))
				{
					this._StockDT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="SmallInt NOT NULL")]
		public short Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Decimal(10,4) NOT NULL")]
		public decimal ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this._ClosePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
	}
	
	public partial class GetStockBasicInfoResult
	{
		
		private string _StockName;
		
		private string _StockNo;
		
		private string _Category;
		
		private string _CompanyName;
		
		private string _CompanyID;
		
		private System.DateTime _BuildDate;
		
		private System.DateTime _PublishDate;
		
		private decimal _Capital;
		
		private long _ReleaseStockCount;
		
		private string _Chairman;
		
		private string _CEO;
		
		private string _Url;
		
		private string _Business;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _LastModifiedAt;
		
		private System.Nullable<decimal> _MarketValue;
		
		public GetStockBasicInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StockName
		{
			get
			{
				return this._StockName;
			}
			set
			{
				if ((this._StockName != value))
				{
					this._StockName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StockNo
		{
			get
			{
				return this._StockNo;
			}
			set
			{
				if ((this._StockNo != value))
				{
					this._StockNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildDate", DbType="Date NOT NULL")]
		public System.DateTime BuildDate
		{
			get
			{
				return this._BuildDate;
			}
			set
			{
				if ((this._BuildDate != value))
				{
					this._BuildDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="Date NOT NULL")]
		public System.DateTime PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this._PublishDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capital", DbType="Money NOT NULL")]
		public decimal Capital
		{
			get
			{
				return this._Capital;
			}
			set
			{
				if ((this._Capital != value))
				{
					this._Capital = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseStockCount", DbType="BigInt NOT NULL")]
		public long ReleaseStockCount
		{
			get
			{
				return this._ReleaseStockCount;
			}
			set
			{
				if ((this._ReleaseStockCount != value))
				{
					this._ReleaseStockCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chairman", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Chairman
		{
			get
			{
				return this._Chairman;
			}
			set
			{
				if ((this._Chairman != value))
				{
					this._Chairman = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CEO
		{
			get
			{
				return this._CEO;
			}
			set
			{
				if ((this._CEO != value))
				{
					this._CEO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Business
		{
			get
			{
				return this._Business;
			}
			set
			{
				if ((this._Business != value))
				{
					this._Business = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedAt", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedAt
		{
			get
			{
				return this._LastModifiedAt;
			}
			set
			{
				if ((this._LastModifiedAt != value))
				{
					this._LastModifiedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketValue", DbType="Money")]
		public System.Nullable<decimal> MarketValue
		{
			get
			{
				return this._MarketValue;
			}
			set
			{
				if ((this._MarketValue != value))
				{
					this._MarketValue = value;
				}
			}
		}
	}
	
	public partial class GetStockFinancialReportResult
	{
		
		private string _StockName;
		
		private string _StockNo;
		
		private short _Year;
		
		private short _Season;
		
		private decimal _TotalAssets;
		
		private decimal _TotalLiability;
		
		private decimal _NetWorth;
		
		private decimal _NAV;
		
		private decimal _Revenue;
		
		private decimal _BusinessInterest;
		
		private decimal _NetProfitTaxFree;
		
		private decimal _EPS;
		
		private decimal _BusinessCashflow;
		
		private decimal _InvestmentCashflow;
		
		private decimal _FinancingCashflow;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _LastModifiedAt;
		
		public GetStockFinancialReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StockName
		{
			get
			{
				return this._StockName;
			}
			set
			{
				if ((this._StockName != value))
				{
					this._StockName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StockNo
		{
			get
			{
				return this._StockNo;
			}
			set
			{
				if ((this._StockNo != value))
				{
					this._StockNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Season", DbType="SmallInt NOT NULL")]
		public short Season
		{
			get
			{
				return this._Season;
			}
			set
			{
				if ((this._Season != value))
				{
					this._Season = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAssets", DbType="Money NOT NULL")]
		public decimal TotalAssets
		{
			get
			{
				return this._TotalAssets;
			}
			set
			{
				if ((this._TotalAssets != value))
				{
					this._TotalAssets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLiability", DbType="Money NOT NULL")]
		public decimal TotalLiability
		{
			get
			{
				return this._TotalLiability;
			}
			set
			{
				if ((this._TotalLiability != value))
				{
					this._TotalLiability = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetWorth", DbType="Money NOT NULL")]
		public decimal NetWorth
		{
			get
			{
				return this._NetWorth;
			}
			set
			{
				if ((this._NetWorth != value))
				{
					this._NetWorth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAV", DbType="Money NOT NULL")]
		public decimal NAV
		{
			get
			{
				return this._NAV;
			}
			set
			{
				if ((this._NAV != value))
				{
					this._NAV = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revenue", DbType="Money NOT NULL")]
		public decimal Revenue
		{
			get
			{
				return this._Revenue;
			}
			set
			{
				if ((this._Revenue != value))
				{
					this._Revenue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessInterest", DbType="Money NOT NULL")]
		public decimal BusinessInterest
		{
			get
			{
				return this._BusinessInterest;
			}
			set
			{
				if ((this._BusinessInterest != value))
				{
					this._BusinessInterest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetProfitTaxFree", DbType="Money NOT NULL")]
		public decimal NetProfitTaxFree
		{
			get
			{
				return this._NetProfitTaxFree;
			}
			set
			{
				if ((this._NetProfitTaxFree != value))
				{
					this._NetProfitTaxFree = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPS", DbType="Money NOT NULL")]
		public decimal EPS
		{
			get
			{
				return this._EPS;
			}
			set
			{
				if ((this._EPS != value))
				{
					this._EPS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessCashflow", DbType="Money NOT NULL")]
		public decimal BusinessCashflow
		{
			get
			{
				return this._BusinessCashflow;
			}
			set
			{
				if ((this._BusinessCashflow != value))
				{
					this._BusinessCashflow = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentCashflow", DbType="Money NOT NULL")]
		public decimal InvestmentCashflow
		{
			get
			{
				return this._InvestmentCashflow;
			}
			set
			{
				if ((this._InvestmentCashflow != value))
				{
					this._InvestmentCashflow = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancingCashflow", DbType="Money NOT NULL")]
		public decimal FinancingCashflow
		{
			get
			{
				return this._FinancingCashflow;
			}
			set
			{
				if ((this._FinancingCashflow != value))
				{
					this._FinancingCashflow = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedAt", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedAt
		{
			get
			{
				return this._LastModifiedAt;
			}
			set
			{
				if ((this._LastModifiedAt != value))
				{
					this._LastModifiedAt = value;
				}
			}
		}
	}
	
	public partial class GetStockForumDataResult
	{
		
		private string _StockNo;
		
		private string _StockName;
		
		private long _ID;
		
		private string _Source;
		
		private string _Subject;
		
		private string _Hash;
		
		private string _Url;
		
		private System.DateTime _ArticleDate;
		
		private System.DateTime _CreatedAt;
		
		public GetStockForumDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StockNo
		{
			get
			{
				return this._StockNo;
			}
			set
			{
				if ((this._StockNo != value))
				{
					this._StockNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StockName
		{
			get
			{
				return this._StockName;
			}
			set
			{
				if ((this._StockName != value))
				{
					this._StockName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this._Hash = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleDate", DbType="Date NOT NULL")]
		public System.DateTime ArticleDate
		{
			get
			{
				return this._ArticleDate;
			}
			set
			{
				if ((this._ArticleDate != value))
				{
					this._ArticleDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
	}
	
	public partial class GetStockInterestIssuedInfoResult
	{
		
		private string _StockName;
		
		private string _StockNo;
		
		private short _Year;
		
		private short _Season;
		
		private System.DateTime _DecisionDate;
		
		private decimal _ProfitCashIssued;
		
		private decimal _ProfitStockIssued;
		
		private decimal _SsrCashIssued;
		
		private decimal _SsrStockIssued;
		
		private decimal _CapitalReserveCashIssued;
		
		private decimal _CapitalReserveStockIssued;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _LastModifiedAt;
		
		public GetStockInterestIssuedInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StockName
		{
			get
			{
				return this._StockName;
			}
			set
			{
				if ((this._StockName != value))
				{
					this._StockName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StockNo
		{
			get
			{
				return this._StockNo;
			}
			set
			{
				if ((this._StockNo != value))
				{
					this._StockNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Season", DbType="SmallInt NOT NULL")]
		public short Season
		{
			get
			{
				return this._Season;
			}
			set
			{
				if ((this._Season != value))
				{
					this._Season = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionDate", DbType="Date NOT NULL")]
		public System.DateTime DecisionDate
		{
			get
			{
				return this._DecisionDate;
			}
			set
			{
				if ((this._DecisionDate != value))
				{
					this._DecisionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitCashIssued", DbType="Money NOT NULL")]
		public decimal ProfitCashIssued
		{
			get
			{
				return this._ProfitCashIssued;
			}
			set
			{
				if ((this._ProfitCashIssued != value))
				{
					this._ProfitCashIssued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitStockIssued", DbType="Money NOT NULL")]
		public decimal ProfitStockIssued
		{
			get
			{
				return this._ProfitStockIssued;
			}
			set
			{
				if ((this._ProfitStockIssued != value))
				{
					this._ProfitStockIssued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SsrCashIssued", DbType="Money NOT NULL")]
		public decimal SsrCashIssued
		{
			get
			{
				return this._SsrCashIssued;
			}
			set
			{
				if ((this._SsrCashIssued != value))
				{
					this._SsrCashIssued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SsrStockIssued", DbType="Money NOT NULL")]
		public decimal SsrStockIssued
		{
			get
			{
				return this._SsrStockIssued;
			}
			set
			{
				if ((this._SsrStockIssued != value))
				{
					this._SsrStockIssued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapitalReserveCashIssued", DbType="Money NOT NULL")]
		public decimal CapitalReserveCashIssued
		{
			get
			{
				return this._CapitalReserveCashIssued;
			}
			set
			{
				if ((this._CapitalReserveCashIssued != value))
				{
					this._CapitalReserveCashIssued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapitalReserveStockIssued", DbType="Money NOT NULL")]
		public decimal CapitalReserveStockIssued
		{
			get
			{
				return this._CapitalReserveStockIssued;
			}
			set
			{
				if ((this._CapitalReserveStockIssued != value))
				{
					this._CapitalReserveStockIssued = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedAt", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedAt
		{
			get
			{
				return this._LastModifiedAt;
			}
			set
			{
				if ((this._LastModifiedAt != value))
				{
					this._LastModifiedAt = value;
				}
			}
		}
	}
	
	public partial class GetStockMarketNewsResult
	{
		
		private string _StockNo;
		
		private string _Source;
		
		private System.DateTime _NewsDate;
		
		private string _Subject;
		
		private string _Url;
		
		private System.DateTime _CreatedAt;
		
		public GetStockMarketNewsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StockNo
		{
			get
			{
				return this._StockNo;
			}
			set
			{
				if ((this._StockNo != value))
				{
					this._StockNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsDate", DbType="Date NOT NULL")]
		public System.DateTime NewsDate
		{
			get
			{
				return this._NewsDate;
			}
			set
			{
				if ((this._NewsDate != value))
				{
					this._NewsDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
	}
	
	public partial class GetStockPriceHistoryResult
	{
		
		private string _StockName;
		
		private string _StockNo;
		
		private System.DateTime _StockDT;
		
		private decimal _OpenPrice;
		
		private decimal _HighPrice;
		
		private decimal _LowPrice;
		
		private decimal _ClosePrice;
		
		private decimal _DeltaPrice;
		
		private decimal _DeltaPercent;
		
		private decimal _PE;
		
		private long _Volume;
		
		private System.DateTime _CreatedAt;
		
		public GetStockPriceHistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StockName
		{
			get
			{
				return this._StockName;
			}
			set
			{
				if ((this._StockName != value))
				{
					this._StockName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StockNo
		{
			get
			{
				return this._StockNo;
			}
			set
			{
				if ((this._StockNo != value))
				{
					this._StockNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockDT", DbType="Date NOT NULL")]
		public System.DateTime StockDT
		{
			get
			{
				return this._StockDT;
			}
			set
			{
				if ((this._StockDT != value))
				{
					this._StockDT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Decimal(10,4) NOT NULL")]
		public decimal OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this._OpenPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighPrice", DbType="Decimal(10,4) NOT NULL")]
		public decimal HighPrice
		{
			get
			{
				return this._HighPrice;
			}
			set
			{
				if ((this._HighPrice != value))
				{
					this._HighPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowPrice", DbType="Decimal(10,4) NOT NULL")]
		public decimal LowPrice
		{
			get
			{
				return this._LowPrice;
			}
			set
			{
				if ((this._LowPrice != value))
				{
					this._LowPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Decimal(10,4) NOT NULL")]
		public decimal ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this._ClosePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeltaPrice", DbType="Decimal(10,4) NOT NULL")]
		public decimal DeltaPrice
		{
			get
			{
				return this._DeltaPrice;
			}
			set
			{
				if ((this._DeltaPrice != value))
				{
					this._DeltaPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeltaPercent", DbType="Decimal(10,4) NOT NULL")]
		public decimal DeltaPercent
		{
			get
			{
				return this._DeltaPercent;
			}
			set
			{
				if ((this._DeltaPercent != value))
				{
					this._DeltaPercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PE", DbType="Decimal(10,4) NOT NULL")]
		public decimal PE
		{
			get
			{
				return this._PE;
			}
			set
			{
				if ((this._PE != value))
				{
					this._PE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="BigInt NOT NULL")]
		public long Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this._Volume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
	}
	
	public partial class GetStockPriceHistoryPagingResult
	{
		
		private string _StockNo;
		
		private System.DateTime _StockDT;
		
		private decimal _OpenPrice;
		
		private decimal _HighPrice;
		
		private decimal _LowPrice;
		
		private decimal _ClosePrice;
		
		private decimal _DeltaPrice;
		
		private decimal _DeltaPercent;
		
		private decimal _PE;
		
		private long _Volume;
		
		private System.DateTime _CreatedAt;
		
		private System.Nullable<long> _RNO;
		
		public GetStockPriceHistoryPagingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StockNo
		{
			get
			{
				return this._StockNo;
			}
			set
			{
				if ((this._StockNo != value))
				{
					this._StockNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockDT", DbType="Date NOT NULL")]
		public System.DateTime StockDT
		{
			get
			{
				return this._StockDT;
			}
			set
			{
				if ((this._StockDT != value))
				{
					this._StockDT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Decimal(10,4) NOT NULL")]
		public decimal OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this._OpenPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighPrice", DbType="Decimal(10,4) NOT NULL")]
		public decimal HighPrice
		{
			get
			{
				return this._HighPrice;
			}
			set
			{
				if ((this._HighPrice != value))
				{
					this._HighPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowPrice", DbType="Decimal(10,4) NOT NULL")]
		public decimal LowPrice
		{
			get
			{
				return this._LowPrice;
			}
			set
			{
				if ((this._LowPrice != value))
				{
					this._LowPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Decimal(10,4) NOT NULL")]
		public decimal ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this._ClosePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeltaPrice", DbType="Decimal(10,4) NOT NULL")]
		public decimal DeltaPrice
		{
			get
			{
				return this._DeltaPrice;
			}
			set
			{
				if ((this._DeltaPrice != value))
				{
					this._DeltaPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeltaPercent", DbType="Decimal(10,4) NOT NULL")]
		public decimal DeltaPercent
		{
			get
			{
				return this._DeltaPercent;
			}
			set
			{
				if ((this._DeltaPercent != value))
				{
					this._DeltaPercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PE", DbType="Decimal(10,4) NOT NULL")]
		public decimal PE
		{
			get
			{
				return this._PE;
			}
			set
			{
				if ((this._PE != value))
				{
					this._PE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="BigInt NOT NULL")]
		public long Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this._Volume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RNO", DbType="BigInt")]
		public System.Nullable<long> RNO
		{
			get
			{
				return this._RNO;
			}
			set
			{
				if ((this._RNO != value))
				{
					this._RNO = value;
				}
			}
		}
	}
	
	public partial class GetStocksResult
	{
		
		private string _StockNo;
		
		private string _StockName;
		
		private string _CategoryNo;
		
		private bool _Enable;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _LastModifiedAt;
		
		public GetStocksResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StockNo
		{
			get
			{
				return this._StockNo;
			}
			set
			{
				if ((this._StockNo != value))
				{
					this._StockNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StockName
		{
			get
			{
				return this._StockName;
			}
			set
			{
				if ((this._StockName != value))
				{
					this._StockName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CategoryNo
		{
			get
			{
				return this._CategoryNo;
			}
			set
			{
				if ((this._CategoryNo != value))
				{
					this._CategoryNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit NOT NULL")]
		public bool Enable
		{
			get
			{
				return this._Enable;
			}
			set
			{
				if ((this._Enable != value))
				{
					this._Enable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedAt", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedAt
		{
			get
			{
				return this._LastModifiedAt;
			}
			set
			{
				if ((this._LastModifiedAt != value))
				{
					this._LastModifiedAt = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
